diff --git a/node_modules/react-use/CHANGELOG.md b/node_modules/react-use/CHANGELOG.md
index 51ec13d..acc347e 100644
--- a/node_modules/react-use/CHANGELOG.md
+++ b/node_modules/react-use/CHANGELOG.md
@@ -1,26 +1,3 @@
-# [17.5.0](https://github.com/streamich/react-use/compare/v17.4.4...v17.5.0) (2024-01-22)
-
-
-### Features
-
-* add `isFirst` and `isLast` methods to `useStateList` hook ([ac64414](https://github.com/streamich/react-use/commit/ac64414bea4c8afadfb382da9fea44ee89b41e2d))
-* **pencil:** add isFirst and isLast return value to 'useStateList' ([75218e4](https://github.com/streamich/react-use/commit/75218e45dfdcdc6ea193e278cb97ceee98c00f1b))
-* **pencil:** fix with yarn lint:fix ([6a9dde5](https://github.com/streamich/react-use/commit/6a9dde596ae25c0dd2fa97b0cf354143fbc5b5ff))
-
-## [17.4.4](https://github.com/streamich/react-use/compare/v17.4.3...v17.4.4) (2024-01-21)
-
-
-### Bug Fixes
-
-* typo in example ([0534648](https://github.com/streamich/react-use/commit/05346481a15a321b13838eead0bda3024b0d163f))
-
-## [17.4.3](https://github.com/streamich/react-use/compare/v17.4.2...v17.4.3) (2024-01-13)
-
-
-### Bug Fixes
-
-* update useMedia hook to use recommended approach of MDN ([e7379f0](https://github.com/streamich/react-use/commit/e7379f088787cbf9274c1fc21d36061f04855e4c))
-
 ## [17.4.2](https://github.com/streamich/react-use/compare/v17.4.1...v17.4.2) (2023-12-01)
 
 
diff --git a/node_modules/react-use/esm/index.js b/node_modules/react-use/esm/index.js
index 62b6935..a412b8e 100644
--- a/node_modules/react-use/esm/index.js
+++ b/node_modules/react-use/esm/index.js
@@ -13,7 +13,7 @@ export { default as useClickAway } from './useClickAway';
 export { default as useCookie } from './useCookie';
 export { default as useCopyToClipboard } from './useCopyToClipboard';
 export { default as useCounter } from './useCounter';
-export { default as useCss } from './useCss';
+// export { default as useCss } from './useCss';
 export { default as useCustomCompareEffect } from './useCustomCompareEffect';
 export { default as useDebounce } from './useDebounce';
 export { default as useDeepCompareEffect } from './useDeepCompareEffect';
diff --git a/node_modules/react-use/esm/useMedia.js b/node_modules/react-use/esm/useMedia.js
index 0b559de..10e4009 100644
--- a/node_modules/react-use/esm/useMedia.js
+++ b/node_modules/react-use/esm/useMedia.js
@@ -25,11 +25,11 @@ var useMedia = function (query, defaultState) {
             }
             setState(!!mql.matches);
         };
-        mql.addEventListener('change', onChange);
+        mql.addListener(onChange);
         setState(mql.matches);
         return function () {
             mounted = false;
-            mql.removeEventListener('change', onChange);
+            mql.removeListener(onChange);
         };
     }, [query]);
     return state;
diff --git a/node_modules/react-use/esm/useSet.d.ts b/node_modules/react-use/esm/useSet.d.ts
index 9ea32c8..07e5e37 100644
--- a/node_modules/react-use/esm/useSet.d.ts
+++ b/node_modules/react-use/esm/useSet.d.ts
@@ -3,7 +3,6 @@ export interface StableActions<K> {
     remove: (key: K) => void;
     toggle: (key: K) => void;
     reset: () => void;
-    clear: () => void;
 }
 export interface Actions<K> extends StableActions<K> {
     has: (key: K) => boolean;
diff --git a/node_modules/react-use/esm/useSet.js b/node_modules/react-use/esm/useSet.js
index fab6db1..5d21f66 100644
--- a/node_modules/react-use/esm/useSet.js
+++ b/node_modules/react-use/esm/useSet.js
@@ -15,7 +15,7 @@ var useSet = function (initialSet) {
                     : new Set(__spreadArrays(Array.from(prevSet), [item]));
             });
         };
-        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); }, clear: function () { return setSet(new Set()); } };
+        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); } };
     }, [setSet]);
     var utils = __assign({ has: useCallback(function (item) { return set.has(item); }, [set]) }, stableActions);
     return [set, utils];
diff --git a/node_modules/react-use/esm/useStateList.d.ts b/node_modules/react-use/esm/useStateList.d.ts
index 5f3f633..7f98e80 100644
--- a/node_modules/react-use/esm/useStateList.d.ts
+++ b/node_modules/react-use/esm/useStateList.d.ts
@@ -5,7 +5,5 @@ export interface UseStateListReturn<T> {
     setState: (state: T) => void;
     next: () => void;
     prev: () => void;
-    isFirst: boolean;
-    isLast: boolean;
 }
 export default function useStateList<T>(stateSet?: T[]): UseStateListReturn<T>;
diff --git a/node_modules/react-use/esm/useStateList.js b/node_modules/react-use/esm/useStateList.js
index cb6319f..ba70c48 100644
--- a/node_modules/react-use/esm/useStateList.js
+++ b/node_modules/react-use/esm/useStateList.js
@@ -49,5 +49,5 @@ export default function useStateList(stateSet) {
             update();
         },
     }); }, [stateSet]);
-    return __assign({ state: stateSet[index.current], currentIndex: index.current, isFirst: index.current === 0, isLast: index.current === stateSet.length - 1 }, actions);
+    return __assign({ state: stateSet[index.current], currentIndex: index.current }, actions);
 }
diff --git a/node_modules/react-use/lib/index.js b/node_modules/react-use/lib/index.js
index 3559705..d37501b 100644
--- a/node_modules/react-use/lib/index.js
+++ b/node_modules/react-use/lib/index.js
@@ -36,8 +36,8 @@ var useCopyToClipboard_1 = require("./useCopyToClipboard");
 Object.defineProperty(exports, "useCopyToClipboard", { enumerable: true, get: function () { return __importDefault(useCopyToClipboard_1).default; } });
 var useCounter_1 = require("./useCounter");
 Object.defineProperty(exports, "useCounter", { enumerable: true, get: function () { return __importDefault(useCounter_1).default; } });
-var useCss_1 = require("./useCss");
-Object.defineProperty(exports, "useCss", { enumerable: true, get: function () { return __importDefault(useCss_1).default; } });
+// var useCss_1 = require("./useCss");
+// Object.defineProperty(exports, "useCss", { enumerable: true, get: function () { return __importDefault(useCss_1).default; } });
 var useCustomCompareEffect_1 = require("./useCustomCompareEffect");
 Object.defineProperty(exports, "useCustomCompareEffect", { enumerable: true, get: function () { return __importDefault(useCustomCompareEffect_1).default; } });
 var useDebounce_1 = require("./useDebounce");
diff --git a/node_modules/react-use/lib/useMedia.js b/node_modules/react-use/lib/useMedia.js
index 8b9d91f..d56410e 100644
--- a/node_modules/react-use/lib/useMedia.js
+++ b/node_modules/react-use/lib/useMedia.js
@@ -27,11 +27,11 @@ var useMedia = function (query, defaultState) {
             }
             setState(!!mql.matches);
         };
-        mql.addEventListener('change', onChange);
+        mql.addListener(onChange);
         setState(mql.matches);
         return function () {
             mounted = false;
-            mql.removeEventListener('change', onChange);
+            mql.removeListener(onChange);
         };
     }, [query]);
     return state;
diff --git a/node_modules/react-use/lib/useSet.d.ts b/node_modules/react-use/lib/useSet.d.ts
index 9ea32c8..07e5e37 100644
--- a/node_modules/react-use/lib/useSet.d.ts
+++ b/node_modules/react-use/lib/useSet.d.ts
@@ -3,7 +3,6 @@ export interface StableActions<K> {
     remove: (key: K) => void;
     toggle: (key: K) => void;
     reset: () => void;
-    clear: () => void;
 }
 export interface Actions<K> extends StableActions<K> {
     has: (key: K) => boolean;
diff --git a/node_modules/react-use/lib/useSet.js b/node_modules/react-use/lib/useSet.js
index a9777fa..b13789b 100644
--- a/node_modules/react-use/lib/useSet.js
+++ b/node_modules/react-use/lib/useSet.js
@@ -17,7 +17,7 @@ var useSet = function (initialSet) {
                     : new Set(tslib_1.__spreadArrays(Array.from(prevSet), [item]));
             });
         };
-        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); }, clear: function () { return setSet(new Set()); } };
+        return { add: add, remove: remove, toggle: toggle, reset: function () { return setSet(initialSet); } };
     }, [setSet]);
     var utils = tslib_1.__assign({ has: react_1.useCallback(function (item) { return set.has(item); }, [set]) }, stableActions);
     return [set, utils];
diff --git a/node_modules/react-use/lib/useStateList.d.ts b/node_modules/react-use/lib/useStateList.d.ts
index 5f3f633..7f98e80 100644
--- a/node_modules/react-use/lib/useStateList.d.ts
+++ b/node_modules/react-use/lib/useStateList.d.ts
@@ -5,7 +5,5 @@ export interface UseStateListReturn<T> {
     setState: (state: T) => void;
     next: () => void;
     prev: () => void;
-    isFirst: boolean;
-    isLast: boolean;
 }
 export default function useStateList<T>(stateSet?: T[]): UseStateListReturn<T>;
diff --git a/node_modules/react-use/lib/useStateList.js b/node_modules/react-use/lib/useStateList.js
index a828f01..39e575d 100644
--- a/node_modules/react-use/lib/useStateList.js
+++ b/node_modules/react-use/lib/useStateList.js
@@ -51,6 +51,6 @@ function useStateList(stateSet) {
             update();
         },
     }); }, [stateSet]);
-    return tslib_1.__assign({ state: stateSet[index.current], currentIndex: index.current, isFirst: index.current === 0, isLast: index.current === stateSet.length - 1 }, actions);
+    return tslib_1.__assign({ state: stateSet[index.current], currentIndex: index.current }, actions);
 }
 exports.default = useStateList;
